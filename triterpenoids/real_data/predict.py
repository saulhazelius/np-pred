import pickle
import numpy as np
loaded_model = pickle.load(open("triterpenoids.pickle.dat", "rb"))

# test cases:
# eje 1  33.0, 29.6, 83.4, 46.0, 41.7, 21.6, 27.2, 49.5, 20.8, 27.1, 27.5, 34.6, 47.9, 47.7, 49.4, 74.3, 57.2, 21.8, 31.6, 26.2, 88.0, 38.3, 24.8, 85.5, 71.5, 26.6, 27.5, 64.4, 11.9, 20.8, 106.3, 73.3, 75.3, 70.3, 76.5, 62.4	 https://www.sciencedirect.com/science/article/pii/S1874390019300047 (comp 1) pred 1

# eje 2 32.1, 30.4, 78.9, 40.6, 47.2, 21.2, 26.2, 48.1, 20.1, 26.1, 26.5, 33.0, 45.4, 48.9, 35.8, 28.2, 52.3, 18.1, 30.0, 36.0, 18.1, 35.6, 24.8, 130.7, 129.6, 75.9, 14.0, 25.5, 14.1, 18.3, 171.1, 21.1 https://www.tandfonline.com/doi/full/10.1080/14786419.2019.1582037 pred 1

# eje 3 39.0, 27.0, 89.2, 39.8, 56.2, 18.7, 32.8, 40.6, 47.5, 37.2, 24.0, 124.9, 140.4, 43.6, 38.5, 67.0, 50.3, 42.0, 43.3, 34.5, 83.8, 27.5, 28.4, 17.3, 16.0, 16.5, 29.1, 181.6, 28.9, 24.6 https://www.tandfonline.com/doi/full/10.1080/10286020.2018.1473385 (comp 1) pred 1

# eje 4 38.9, 26.7, 89.4, 39.4, 55.8, 18.7, 33.0, 40.5, 48.1, 37.1, 24.2, 124.7, 142.3, 42.0, 25.9, 18.9, 43.7, 41.0, 46.1, 36.3, 79.7, 69.5, 28.3, 17.1, 16.2, 16.9, 26.5, 74.2, 29.9, 20.5, 104.2, 75.0, 76.3, 72.2, 77.3, 70.3, 105.6, 75.3, 78.6, 71.9, 78.5, 62.9, 103.7, 80.3, 74.4, 71.9, 76.7, 70.5, 100.6, 72.7, 72.7, 74.5, 69.0, 18.9, 105.9, 75.3, 78.5, 71.9, 78.7, 62.9, 167.4, 128.8, 138.2, 16.3, 21.1, 171.5, 21.4 https://www.tandfonline.com/doi/full/10.1080/14786419.2018.1557172 pred 1

# eje 5 13C-NMR (C5D5 N, 150 MHz) Aglycone Î´ C: 39.2, 28.6, 79.6, 43.4, 56.9, 19.6, 33.8, 40.0, 48.3, 37.5, 24.3, 122.5, 144.1, 42.4, 28.4, 24.2, 47.1, 44.7, 48.4, 70.2, 36.5, 35.4, 23.8, 72.9, 16.0, 17.6, 26.3, 180.6, 26.0, 103.9, 79.1, 87.8, 69.8, 78.5, 62.5, 103.9, 73.5, 77.1, 76.5, 70.0, 18.9, 105.7, 75.2, 78.9, 73.2, 68.2 https://www.tandfonline.com/doi/full/10.1080/14786419.2018.1470515 (comp1) pred 1

# replace these lines with another 13C data to predict

e1 = sorted([33.0, 29.6, 83.4, 46.0, 41.7, 21.6, 27.2, 49.5, 20.8, 27.1, 27.5, 34.6, 47.9, 47.7, 49.4, 74.3, 57.2, 21.8, 31.6, 26.2, 88.0, 38.3, 24.8, 85.5, 71.5, 26.6, 27.5, 64.4, 11.9, 20.8, 106.3, 73.3, 75.3, 70.3, 76.5, 62.4])
e2 = sorted([32.1, 30.4, 78.9, 40.6, 47.2, 21.2, 26.2, 48.1, 20.1, 26.1, 26.5, 33.0, 45.4, 48.9, 35.8, 28.2, 52.3, 18.1, 30.0, 36.0, 18.1, 35.6, 24.8, 130.7, 129.6, 75.9, 14.0, 25.5, 14.1, 18.3, 171.1, 21.1])
e3 = sorted([39.0, 27.0, 89.2, 39.8, 56.2, 18.7, 32.8, 40.6, 47.5, 37.2, 24.0, 124.9, 140.4, 43.6, 38.5, 67.0, 50.3, 42.0, 43.3, 34.5, 83.8, 27.5, 28.4, 17.3, 16.0, 16.5, 29.1, 181.6, 28.9, 24.6])
e4 = sorted([38.9, 26.7, 89.4, 39.4, 55.8, 18.7, 33.0, 40.5, 48.1, 37.1, 24.2, 124.7, 142.3, 42.0, 25.9, 18.9, 43.7, 41.0, 46.1, 36.3, 79.7, 69.5, 28.3, 17.1, 16.2, 16.9, 26.5, 74.2, 29.9, 20.5, 104.2, 75.0, 76.3, 72.2, 77.3, 70.3, 105.6, 75.3, 78.6, 71.9, 78.5, 62.9, 103.7, 80.3, 74.4, 71.9, 76.7, 70.5, 100.6, 72.7, 72.7, 74.5, 69.0, 18.9, 105.9, 75.3, 78.5, 71.9, 78.7, 62.9, 167.4, 128.8, 138.2, 16.3, 21.1, 171.5, 21.4])
e5 = sorted([39.2, 28.6, 79.6, 43.4, 56.9, 19.6, 33.8, 40.0, 48.3, 37.5, 24.3, 122.5, 144.1, 42.4, 28.4, 24.2, 47.1, 44.7, 48.4, 70.2, 36.5, 35.4, 23.8, 72.9, 16.0, 17.6, 26.3, 180.6, 26.0, 103.9, 79.1, 87.8, 69.8, 78.5, 62.5, 103.9, 73.5, 77.1, 76.5, 70.0, 18.9, 105.7, 75.2, 78.9, 73.2, 68.2])

lis = [e1,e2,e3,e4,e5]

def create_data(X):
        le = len(X) 
        dif = 79 - le
       # s = str('')
       	s = []
        for k in range(dif):
                #s = s+str(', -999')
                s.append(-999)
        nl = X+s
        return nl
for eje in lis:
	X = create_data(eje)

	#print(X,len(X), len(eje))
	X_test = np.array([X])
	y_pred = loaded_model.predict_proba(X_test)
	print('probability triterpenoid: ',y_pred[0][1])

